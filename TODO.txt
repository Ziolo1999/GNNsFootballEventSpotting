PLAN:
-> Train the GAT model 
-> Retrain models use smaller train data
-> Finish Evaluation Functions from the clip perspective apply to Evaluator and GameAnalysis
-> Run E

TODO:
-> Retrain the spotting model as normalisation layer has been added
-> Generate all clip animations 
-> Generate first 10 minutes with spotting algorithm

TO COVER:
-> How to upload data 
-> How to save model should I create some paths etc
-> Before running on GPU Lab adjust the datapath in data manager and ask about how to save the model the path to that 
-> Ask about number CPUs and GPUs

-> I tried the VLAD pooling method without temporal aggregation = RESULT SLIGHTLY WORSE THAN BASE GCN
-> The results were calibrated  Platt Scaling
-> Show top mistakes some conclusions patterns:

	BALL RECOVERY: 
		High pace actions with a lot of noise. Troubles to capture one after another (1)
		The first maybe goalkeeper doesn't count for recovery/Imo annotation missed (2)
		Maybe long crosses doesn't count (3)
		It looks that annotation is when Hazard starts to control the ball (4)

	CLEARANCE
		General impression lacks the z axis into consideration but I don't know how to 	implement it (0)
		The first two are predicted nicely the second one is far away from penalty box is immediately after the other and it might be missed with the pass (1)
		Maybe short distance (2)
		Here model takes into account goalkeeper for clearance and also the ball remain close to the player (3)

	DRIBBLE
		When player cuts to the middle / Slightly late (0)
		When player cuts to the middle (1)
		When player cuts to the middle (2)
		Maybe Duel takes the Dribble up (3)
		Imo poor annotation (4)

	FOUL
		Doesn't count advantage rules as foul. It must be break afterwards (0)
		Late as the referee reacted slowly (1)
		The foul was short and close to the side line (2)
		Doesn't count advantage rules as foul. It must be break afterwards (3)		
				
	SHOT
		The defender was very close the data might not capture the speed etc also it was blocked (0)
		Again it was blocked (1)
		Mistakes low crosses as shots as they are fast probably again doesn't take into account blocked shots (2)
		Very slow shot it was detected but with low prob (3)
		Longer detection / Blocked again (4)

-> Decide if I should retrain models smaller number of train dataset increase test dataset
-> Explain two more evaluation classes created
-> For now the results are similar 
-> New evaluation metric till now we evaluate on frame level I want to add evaluation on event level:
	1. Select events based on location of annotations and location of prediction and based on them calculate precision and recall if there is overlap only in one frame it is treated as TP to deal with time delays. Add interpolation and probability cut off based on the probs value and length of the predicted action.
	2. Generate in similar manner negative events. Then use it for ROC curve and AUC value. 

		

		
		

		
		

	